//* ###########****************************########### *//
//* ###########**** NEXT.JS(BACK-END) ******########### *//
//* ###########****************************########### *//
/**
 * Next allows you to write both Frontend and Backend code in a single project.
 * Next makes creating multi-page web apps very easy by allowing for automatic page routing based on filename.
 * Next also features Server Side Rendering (SSR) and Static Site Generation (SSG).
 *
 *
 * FILE STRUCTURE
 The public/ folder works exactly the same way, with the exception of not containing an index.html file. However, if you wanted to add images, icons, fonts, music, etc. you would place them all in the public/ folder.

The styles/ folder is a good addition, providing a dedicated spot for all your CSS files.

The pages/ is what's great. _app.js is an autogenerated file that usually you will not be touching yourself, and sets up some boilerplate code that allows Next to render the proper components.

pages/index.js is the homepage of your website. Basically, every file within the pages folder is a route of your website. Following Javascript/HTML-style naming conventions, this means that index files are the 'main' files. Therefore, pages/index.js is the view that will load up when you first open up your website.
 *
 *
 * ROUTING (adding pages to your website)
 If you add more files under the pages folder, for example a file named about.js - it will be available at YOUR_DOMAIN/about

This is great because you don't have to deal with things like React Router, and building multi-page websites is as simple as just creating a new file under the pages/ folder and Next will automatically generate a route based on the filename for you.

You can also do multilevel routing by creating subfolders under the pages/ folder. For example, something like pages/tracks/freshman.js will have the route YOUR_DOMAIN/tracks/freshman.
 *
 *
 * Writing APIs in Next
There is one special folder under pages/ which was also autogenerated. The pages/api folder.
anything under the pages/api folder acts as an API endpoint.
you can create API endpoints under pages/api just by creating new files, and the endpoint routes are based on the filename.
 */
